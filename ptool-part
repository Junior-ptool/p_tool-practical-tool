#!/bin/bash

#Author: Chike Egbuna
#Practical Tool {ptool}

#This script is intended to aid with partitioning and RAIDing drives for use with software such as virtualizor and Solus to create LVM2 parts and volume groups.
#It can further be used to extend logical volumes.

#Refresh screen
clear

function vd () {
	ls /dev | grep vd*
}

function sd () {
	ls /dev | grep sd*
}


#Ascertain the system in use

if sd ; then
	clear
	clear
	echo "This is a Dedicated System"
elif vd ; then
	clear
	clear
	echo "This Is A Virtualized System"
else
	echo "The drive type is not recognised by this script. Exiting..."
	exit 1
fi

#Check mdadm is installed and if not, then install:
function rhel () {
dnf -y install mdadm
}
function deb () {
apt -y install mdadm
}
rhel_check=$(hostnamectl | egrep -io 'centos|red' | sed -r '/CentOS/d')
function deb_check () {
hostnamectl | egrep -io 'debian|ubuntu'
}

if [[ "$rhel_check" == *centos* ]] || [[ "$rhel_check" == *red* ]] ; then
        rhel
elif [[ "deb_check" == *debian* ]] || [[ "deb_check" == *ubuntu* ]] ; then
        deb
else
        echo "This system may be unsupported to use this script. Exiting..."
        exit 1
fi

sdb=/dev/sdb
vdb=/dev/vdb
md0=/dev/md0
fal=/dev/vloop
drive=
#Checking for amount of drives
if [ vd != vda2 ] ; then
	echo "Only one primary partition has been found."
	echo "This application would rather fallocate primary drives to avoid data loss including that of the bootable data."
	echo "If you would like to proceed with partitioning your primary drive regardless, please confirm so now!"
	read -p "Would you like to continue? Y or N:  " cont
		if [ $cont == Y ] || [ $cont == y ] ; then
			echo "$(tput setaf 1)$(tput setab 7)>>WARNING!!<<  All data may be erased including boot. Are you sure?$(tput sgr 0)"
			
			read -p "YES or NO to partitioning primary drive:  "
			if [ $REPLY == Y ] || [ $REPLY == y ] ; then
				parted $drive mklabel gpt || parted $vdrive mklabel gpt
				parted $drive mkpart primary ext4 $int_size $size
			else
#Use fallocate instead to avoid disk desruction
				echo "Since no has been selected, we will proceed with fallocate."
				echo "Please select the size you would like to fallocate into a volume group."
				read -p "5GB, 10GB, 20GB, 50GB or 100GB:   " weight
					case $weight in
						5GB) echo "5GB fallocated partition selectd";;
						10GB) echo "10GB fallocated partition selected";;
						20GB) echo "20GB fallocated partition selected ;;
						50GB) echo "50GB fallocated partition selected";;
						100GB) echo "100GB fallocated partition selected;;
					esac
				fallocate -l $weight vm.disk
			fi
	

function ptool () {
ls /ptool
}		
			if [[ "ptool" != true ]] ; then touch mask && rm -f mask ; else sudo mkdir /ptool ; fi
                                #for ((x=0;x<100;x++)) ; do sudo fallocate -l $weight /ptool/vm.disk$x ; done
				#for ((x=0;x<100;x++)) ; do ln -s /ptool/vm.disk$x /dev/vloop$x ; done
				#declare f_disk=$(/ptool/vm.disk)
			fi
fi
	if [[ "ls /dev/sdb" != "ls /dev/sdb" ]] || [[ "ls /dev/vdb" != "/ls /dev/vdb" ]] ; then 
		echo "Single Drive. RAID cannot be created. Skipping..."
		echo "Creating logical volumes on fallocated raw drive"
        	fal=/dev/vloop
		fal1=/dev/loop0
		losetup -f $fal
		vgcreate VG1 $fal1
		echo ""
		echo "Volume group successfully created. You may now use with SolumVM or Virtualizor as storage. You can also mount this VG"
	else 
		echo "You have multiple drives available. Would you like to create a RAID device or partition individually?"
	
		echo ""
		read -p "Y or N?   "
			if [ $REPLY == Y ] || [ $REPLY == y] ; then
				while true ; do  
				read -p "How many devices would you like to use for RAID?:   " raid_devices
				read -p "What RAID level would you like?:  " raid_level
				echo "0, 1, 5, 6, 10"
					case $raid_level in
						0) echo "RAID$raid_level selected";;
						1) echo "RAID$raid_level selected";;
						5) echo "RAID$raid_level selected";;
						6) echo "RAID$raid_level selected";;
						10) echo "RAID$raid_level selected";;
					esac
				break
				done
			fi
	
function drive () {
/dev/sda || /dev/vda
}
function drive2 () {
/dev/sdb || /dev/vdb
}
function drive3 () {
/dev/sdc || /dev/vdc
}
function drive2 () {
/dev/sdd || /dev/vdd
}
		if [ "$raid_devices" = 1 ] ; then
			sudo mdadm --zero-superblock $drive
			sudo mdadm --create /dev/md0 --level=$raid_level --raid-devices=$raid_devices drive
		elif [ "$raid_devices" = 2 ] ; then 
			sudo mdadm --zero-superblock $drive
                        sudo mdadm --create /dev/md0 --level=$raid_level --raid-devices=$raid_devices drive drive2
		elif [ "$raid_devices" = 3 ] ; then
                        sudo mdadm --zero-superblock $drive
                        sudo mdadm --create /dev/md0 --level=$raid_level --raid-devices=$raid_devices drive drive2 drive3
		elif [ "$raid_devices" = 4 ] ; then
                        sudo mdadm --zero-superblock $drive
                        sudo mdadm --create /dev/md0 --level=$raid_level --raid-devices=$raid_devices drive drive2 drive3 drive4
		else
			echo "This configuration is not supported. You can however edit this script to add the additional drives needed"
			exit 1
		fi
 
function sdb () {
ls dev/sdb
}
function vdb () {
ls /dev/vdb
}
function md0 () {
ls /dev/md0
}
function fal () {
ls /dev/vloop
}

#Create VG
echo " Volume Group is now being created"

if sdb || vdb ; then
	echo "Creating logical volumes on physical drives"
	vgcreate -s 32M VG1 $sdb || vgcreate -s 32M VG1 $vdb
elif md0 ; then
        echo "Creating logical volumes on RAID device."
	vgcreate -s 32M VG1 $md0
elif fal ; then
        echo "Creating logical volumes on fallocated raw drive"
	vgcreate -s 32M VG1 $fal
else 
	echo "An error has occurred. Exiting..."
	exit 1
fi
fi
